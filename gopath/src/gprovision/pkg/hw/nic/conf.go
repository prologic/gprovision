// Copyright (C) 2015-2020 the Gprovision Authors. All Rights Reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
//
// SPDX-License-Identifier: BSD-3-Clause
//

package nic

import (
	"fmt"
	"io/ioutil"
	"os"
	"strings"
)

const (
	irqdir    = "/run/systemd/system/irqbalance.service.d"
	generated = "# DO NOT EDIT - generated by "
)

var confname = irqdir + "/override.conf"

//return true if bans have already been written out for irqbalance
func NICsAlreadyConfigured() bool {
	_, err := os.Stat(confname)
	if err != nil {
		return false
	}
	content, _ := ioutil.ReadFile(confname)
	return strings.Contains(string(content), generated)
}

//write bans for irqbalance to systemd override file
func WriteIRQBalanceBans(irqs []uint64) {
	template := generated + os.Args[0] + "\n[Service]\nEnvironment=\"IRQBALANCE_ARGS=%s\"\n"
	var args string
	fmt.Printf("banned irqs:")
	for _, i := range irqs {
		args += fmt.Sprintf("-i %d ", i)
		fmt.Printf(" %d", i)
	}
	fmt.Printf("\n")
	data := []byte(fmt.Sprintf(template, args))
	if err := os.MkdirAll(irqdir, 0755); err != nil {
		fmt.Println(err)
	}

	if err := ioutil.WriteFile(confname, data, 0644); err != nil {
		fmt.Println(err)
	}
}
